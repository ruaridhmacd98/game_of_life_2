{"version":3,"sources":["tutorial.js","grid.js","game.js","App.js","reportWebVitals.js","index.js"],"names":["trigger","className","modal","nested","close","onClick","Grid","this","state","grid","Map","x","y","value","has","set","get","res","output","forEach","row","counts","count","push","Game","getCounts","generateNewGrid","cells","listCells","c","length","player","i","j","xtmp","ytmp","oldGrid","obj","buffer","playerCounts","total","Object","values","reduce","a","b","parseInt","keys","maxValue","COLOURS","require","1","2","3","COLOUR_OPTIONS","label","PATTERNS","Canvas","selectPattern","pattern","setState","patternToPlace","selectColour","colour","colourToPlace","updateRunning","isRunning","width","height","ctx","isDragging","mousePosition","scale","centreOffset","getInitialGrid","canvas","refs","getContext","window","innerWidth","innerHeight","game","openSocket","emit","say","setInterval","draw","iterate","event","clientX","offsetLeft","clientY","offsetTop","clientToCell","scroll","deltaY","newScale","newX","newY","clientx","clienty","Math","floor","fillStyle","fillRect","coords","cellToClient","cellx","celly","globalAlpha","ref","handleClick","onWheel","handleWheel","onMouseDown","handleMouseDown","onMouseUp","handleMouseUp","onMouseMove","handleMouseMove","onChange","options","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.592f519d.chunk.js","sourcesContent":["import React from 'react';\nimport Popup from 'reactjs-popup';\nimport './tutorial.css';\n\nexport default () => (\n  <Popup\n    trigger={<button className=\"button\"> Tutorial </button>}\n    modal\n    nested\n  >\n    {close => (\n      <div className=\"modal\">\n        <button className=\"close\" onClick={close}>\n          &times;\n        </button>\n        <div className=\"header\"> Tutorial </div>\n        <div className=\"content\">\n          {' '}\n          Take it in turns to place cells.\n        </div>\n        <div className=\"actions\">\n          <button\n            className=\"button\"\n            onClick={() => {\n              close();\n            }}\n          >\n            Got it.\n          </button>\n        </div>\n      </div>\n    )}\n  </Popup>\n);\n","export default class Grid {\n  constructor() {\n    this.state = {\n      grid: new Map(),\n    }\n  }\n\n  set(x, y, value){\n   if(!this.state.grid.has(y)){\n     this.state.grid.set(y, new Map());\n   }\n   this.state.grid.get(y).set(x,value);\n  }\n\n  has(x, y){\n    var res = false\n    if(this.state.grid.has(y)){res = this.state.grid.get(y).has(x)}\n    return res\n  }\n\n  get(x, y){return this.state.grid.get(y).get(x)}\n\n  listCells(){\n    var output = []\n    this.state.grid.forEach((row, y, counts)=>{\n      row.forEach((count, x, row)=>{\n\toutput.push([x, y])\n      })\n    })\n    return output;\n  }\n}\n","import Grid from './grid.js';\n\n\nexport default class Game {\n  iterate(grid){\n    let counts = this.getCounts(grid)\n    let newGrid = this.generateNewGrid(counts, grid)\n    return newGrid;\n  }\n\n  getCounts(grid) {\n    let counts = new Grid();\n    const cells = grid.listCells()\n    for(var c=0; c<cells.length; c++){\n\tvar x, y\n\t[x, y] = cells[c]\n\tlet player = grid.get(x, y)\n\tfor(let i=-1; i<2; i++){\n\t   for(let j =-1; j<2; j++){\n\t\tif(i===0 & j===0){continue}\n\t\tlet xtmp=x+j, ytmp=y+i;\n\t\tif(!counts.has(xtmp, ytmp)){\n\t\t  counts.set(xtmp, ytmp, {});\n\t\t}\n\t\tif(!(player in counts.get(xtmp, ytmp))){\n\t\t  counts.get(xtmp, ytmp)[player] = 0;\n\t\t}\n\t\tcounts.get(xtmp, ytmp)[player]++;\n\t   }\n\t}\n    }\n    return counts;\n  }\n\n  generateNewGrid(counts, oldGrid){\n    let buffer = new Grid();\n    const cells = counts.listCells()\n    for(var i=0; i<cells.length; i++){\n\tvar x, y;\n\t[x, y] = cells[i];\n\tvar playerCounts = counts.get(x, y);\n\tconst sumValues = obj => Object.values(obj).reduce((a, b) => a + b);\n\tconst maxValue = obj => Object.keys(obj).reduce(function(a, b){ return obj[a] > obj[b] ? a : b });\n\tlet total = sumValues(playerCounts)\n        if(oldGrid.has(x, y)){\n          if(total===2 | total === 3){\n\t    buffer.set(x, y, oldGrid.get(x, y));\n\t  }\n        }\n\telse if(total===3){\n\t     buffer.set(x, y, parseInt(maxValue(playerCounts)));\n        }\n    }\n    return buffer;\n  }\n}\n\n","import React from 'react';\nimport Select from 'react-select';\nimport Tutorial from './tutorial.js';\nimport './App.css';\nimport Grid from './grid.js';\nimport Game from './game.js';\nimport openSocket from 'socket.io-client';\nimport socketIOClient from \"socket.io-client\";\nvar io = require('socket.io-client');\n\nconst COLOURS = {\n  1: '#0000FF',\n  2: '#FF0000',\n  3: '#00FF00',\n}\n\nconst COLOUR_OPTIONS = [\n  {label: 'blue', value: 1},\n  {label: 'red', value: 2},\n  {label: 'green', value: 3},\n]\n\nconst PATTERNS = [\n  {label: 'cell', value: [[0, 0]]},\n  {label: 'square', value: [[0, 0], [1, 0], [0, 1], [1, 1]]},\n  {label: 'glider', value: [[0, 0], [0, 1], [0, 2], [1, 0], [2, 1]]},\n]\n\nclass Canvas extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n\t  width: null,\n\t  height: null,\n\t  ctx: null,\n\t  isRunning: true,\n\t  isDragging: false,\n\t  mousePosition: [0, 0],\n\t  scale: 10,\n\t  centreOffset: [0, 0],\n\t  cells: getInitialGrid(),\n\t  patternToPlace: [[0, 0]],\n\t  colourToPlace: 1,\n    };\n\n  }\n\n  componentDidMount() {\n    let canvas = this.refs.canvas;\n    let ctx = canvas.getContext(\"2d\");\n    ctx.canvas.width = window.innerWidth;\n    ctx.canvas.height = window.innerHeight * 0.8;\n    var game = new Game();\n    this.setState({width: canvas.width});\n    this.setState({height: canvas.height});\nvar socket = openSocket('http://localhost:8080');\n// const socket = socketIOClient('http://localhost:8080');\nsocket.emit('hi', {say:'hi'});\n    setInterval(()=>{\n\tthis.draw();\n\tif (this.state.isRunning) {\n\t\tthis.setState({cells: game.iterate(this.state.cells)});\n\t}\n     }, 250)\n     }\n\n  selectPattern = pattern => {\n    this.setState({patternToPlace: pattern.value})\n  }\n\n  selectColour = colour => {\n    this.setState({colourToPlace: colour.value})\n  }\n\n  updateRunning = () => {\n    this.setState({isRunning: !this.state.isRunning})\n  }\n\n  handleClick(event){\n    let ctx = this.refs.canvas.getContext(\"2d\");\n    let x = event.clientX - ctx.canvas.offsetLeft;\n    let y = event.clientY - ctx.canvas.offsetTop;\n    [x, y] = this.clientToCell([x, y]);\n    let pattern = this.state.patternToPlace;\n    for(var i=0; i<pattern.length; i++){\n      this.state.cells.set(pattern[i][0]+x, pattern[i][1]+y, this.state.colourToPlace);\n    }\n    this.draw();\n  }\n\n  handleWheel(event){\n    let scroll = event.deltaY;\n\t  let newScale = this.state.scale;\n\t  let [newX, newY] = this.state.centreOffset;\n\t  if(scroll>0){\n\t    newScale/=0.9;\n\t    newX/=0.9;\n\t    newY/=0.9;\n\t  }\n\t  else if(newScale>1){\n\t    newScale*=0.9;\n\t    newX*=0.9;\n\t    newY*=0.9;\n\t  }\n    this.setState({scale: newScale, centreOffset: [newX, newY]})\n    this.setState({mousePosition: [event.clientX, event.clientY]});\n    this.draw();\n  }\n\n  handleMouseDown(event){\n   this.setState({isDragging: true, mousePosition: [event.clientX, event.clientY]});\n  }\n\n  handleMouseUp(event){\n   this.setState({isDragging: false});\n  }\n\n  handleMouseMove(event){\n    if(this.state.isDragging){\n      let [newX, newY] = this.state.centreOffset;\n      newX += event.clientX - this.state.mousePosition[0];\n      newY += event.clientY - this.state.mousePosition[1];\n      this.setState({centreOffset: [newX, newY]});\n    }\n    this.setState({mousePosition: [event.clientX, event.clientY]});\n    this.draw();\n  }\n\n  clientToCell([clientx, clienty]){\n    let cellx = Math.floor((clientx - this.state.width/2 - this.state.centreOffset[0]) / this.state.scale);\n    let celly = Math.floor((clienty - this.state.height/2 - this.state.centreOffset[1]) / this.state.scale);\n    return [cellx, celly];\n  }\n\n  cellToClient([x, y]){\n\tlet clientx = Math.floor(x*this.state.scale + this.state.centreOffset[0] + this.state.width/2);\n\tlet clienty = Math.floor(y*this.state.scale + this.state.centreOffset[1] + this.state.height/2);\n\treturn [clientx, clienty];\n  }\n\n  draw(){\n    let ctx = this.refs.canvas.getContext(\"2d\");\n    ctx.fillStyle=\"#E0E0E0\";\n    ctx.fillRect(0,0,this.state.width,this.state.height);\n    let coords = this.state.cells.listCells()\n    for(var i=0; i<coords.length; i++){\n\tlet x, y, clientx, clienty;\n\t[x, y] = coords[i];\n\tlet player = this.state.cells.get(x, y);\n\t[clientx, clienty] = this.cellToClient([x, y]);\n\tctx.fillStyle=COLOURS[player];\n\tctx.fillRect(clientx, clienty, 0.9*this.state.scale, 0.9*this.state.scale);\n    }\n    let pattern = this.state.patternToPlace;\n    let x, y, clientx, clienty, cellx, celly;\n    [cellx, celly] = this.clientToCell(this.state.mousePosition);\n    for(i=0; i<pattern.length; i++){\n      x = pattern[i][0]+cellx; y = pattern[i][1]+celly;\n      [clientx, clienty] = this.cellToClient([x, y]);\n      ctx.globalAlpha=0.5;\n      ctx.fillStyle=COLOURS[this.state.colourToPlace];\n      ctx.fillRect(clientx, clienty, 0.9*this.state.scale, 0.9*this.state.scale);\n      ctx.globalAlpha=1.0;\n    }\n  }\n\n  render (){\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n        </header>\n        <body>\n        <canvas ref=\"canvas\"\n\t    onClick={(event) => this.handleClick(event)}\n\t    onWheel={(event) => this.handleWheel(event)}\n\t    onMouseDown={(event) => this.handleMouseDown(event)}\n\t    onMouseUp={(event) => this.handleMouseUp(event)}\n\t    onMouseMove={(event) => this.handleMouseMove(event)}\n\t></canvas>\n\t<Tutorial/>\n\t<button className=\"button\" onClick={this.updateRunning}>\n\t    {this.state.isRunning ? <div>Stop</div>\n                            : <div>Start</div>}\n\t</button>\n\t<Select\n\t  onChange={this.selectPattern}\n\t  options={PATTERNS}\n\t  placeholder='Select Pattern'\n\t/>\n\t<Select\n\t  onChange={this.selectColour}\n\t  options={COLOUR_OPTIONS}\n\t  placeholder='Select Colour'\n\t/>\n        </body>\n      </div>\n    );\n  }\n}\n\nexport default Canvas;\n\n\nfunction getInitialGrid() {\n  const grid = new Grid();\n      grid.set(3, 0, 1);\n      grid.set(3, 1, 1);\n      grid.set(3, 2, 1);\n      grid.set(4, 1, 1);\n      grid.set(2, 2, 1);\n      grid.set(18, 0, 2);\n      grid.set(18, 1, 2);\n      grid.set(18, 2, 2);\n      grid.set(19, 1, 2);\n      grid.set(17, 2, 2);\n      grid.set(3, 20, 3);\n      grid.set(3, 21, 3);\n      grid.set(3, 22, 3);\n      grid.set(4, 21, 3);\n      grid.set(2, 22, 3);\n  return grid;\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}